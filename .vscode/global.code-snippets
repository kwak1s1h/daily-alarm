{
	// Place your daily-alarm 작업 영역 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Create new command": {
		"scope": "javascript,typescript",
		"prefix": "newCmd",
		"body": [
			"import { ChatInputCommandInteraction, SlashCommandBuilder } from \"discord.js\";",
			"",
			"export const data = new SlashCommandBuilder()",
			"    .setName(\"$1\")",
			"    .setDescription(\"$2\")",
			"    .setNameLocalization(\"ko\", \"$3\");",
			"",
			"export async function execute(interaction: ChatInputCommandInteraction) {",
			"    return await interaction.reply({ content: \"$4\" });",
			"}",
		],
		"isFileTemplate": true,
		"description": "Create new command"
	},
	"Create new dev command": {
		"scope": "javascript,typescript",
		"prefix": "newDevCmd",
		"body": [
			"import { ChatInputCommandInteraction, SlashCommandBuilder } from \"discord.js\";",
			"",
			"export const data = new SlashCommandBuilder()",
			"    .setName(\"$1\")",
			"    .setDescription(\"$2\")",
			"",
			"export async function execute(interaction: ChatInputCommandInteraction) {",
			"    return await interaction.reply({ content: \"$4\" });",
			"}",
		],
		"isFileTemplate": true,
		"description": "Create new command"
	}
}